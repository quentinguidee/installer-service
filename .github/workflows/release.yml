name: Release (stable)

on:
  push:
    tags:
      - "v*"
      - "!v*-beta*"

permissions:
  contents: write

jobs:
  actionlint:
    name: Run actionlint
    uses: ./.github/workflows/call-actionlint.yml

  all-go-tests:
    name: Run All Go Tests
    needs: actionlint
    uses: ./.github/workflows/call-all-go-tests.yml

  release:
    name: Release
    needs: all-go-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
          check-latest: true
          cache: true

      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-docker:
    name: Release Docker images
    needs: all-go-tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger-docapi:
    needs: release
    name: Generate DocAPI
    uses: ./.github/workflows/call-docapi.yml
    secrets:
      token: ${{ secrets.PAT }}
